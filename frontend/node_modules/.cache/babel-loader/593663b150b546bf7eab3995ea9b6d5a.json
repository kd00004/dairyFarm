{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kslud\\\\Documents\\\\dairyFarm\\\\frontend\\\\src\\\\screens\\\\OrderListScreen.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useContext, useEffect, useReducer } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate } from 'react-router-dom';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state,\n        loading: true\n      };\n\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        orders: action.payload,\n        loading: false\n      };\n\n    case 'FETCH_FAIL':\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function OrderListScreen() {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    state\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  const [{\n    loading,\n    error,\n    orders\n  }, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: ''\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        dispatch({\n          type: 'FETCH_REQUEST'\n        });\n        const {\n          data\n        } = await axios.get(`/api/orders`, {\n          headers: {\n            Authorization: `Bearer ${userInfo.token}`\n          }\n        });\n        dispatch({\n          type: 'FETCH_SUCCESS',\n          payload: data\n        });\n      } catch (err) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: getError(err)\n        });\n      }\n    };\n\n    fetchData();\n  }, [userInfo]);\n  return (\n    /*#__PURE__*/\n    //UI of the component\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"USER\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"DATE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"TOTAL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"PAID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"DELIVERED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ACTIONS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: orders.map((order //to convert each order into a row\n          ) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: order._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.user ? order.user.name : 'DELETED USER'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.createdAt.substring(0, 10)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.totalPrice.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.isPaid ? order.paidAt.substring(0, 10) : 'No'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.isDelivered ? order.deliveredAt.substring(0, 10) : 'No'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                variant: \"light\",\n                onClick: () => {\n                  navigate(`/order/${order._id}`);\n                },\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this)]\n          }, order._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(OrderListScreen, \"vs3gLedsY7mRYklkjtY6ol3KJdM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = OrderListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderListScreen\");","map":{"version":3,"names":["axios","React","useContext","useEffect","useReducer","Button","Helmet","useNavigate","LoadingBox","MessageBox","Store","getError","reducer","state","action","type","loading","orders","payload","error","OrderListScreen","navigate","userInfo","dispatch","fetchData","data","get","headers","Authorization","token","err","map","order","_id","user","name","createdAt","substring","totalPrice","toFixed","isPaid","paidAt","isDelivered","deliveredAt"],"sources":["C:/Users/kslud/Documents/dairyFarm/frontend/src/screens/OrderListScreen.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useContext, useEffect, useReducer } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { Store } from '../Store';\r\nimport { getError } from '../utils';\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_REQUEST':\r\n      return { ...state, loading: true };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        orders: action.payload,\r\n        loading: false,\r\n      };\r\n    case 'FETCH_FAIL':\r\n      return { ...state, loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default function OrderListScreen() {\r\n  const navigate = useNavigate();\r\n  const { state } = useContext(Store);\r\n  const { userInfo } = state;\r\n  const [{ loading, error, orders }, dispatch] = useReducer(reducer, {\r\n    loading: true,\r\n    error: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        dispatch({ type: 'FETCH_REQUEST' });\r\n        const { data } = await axios.get(`/api/orders`, {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n      } catch (err) {\r\n        dispatch({\r\n          type: 'FETCH_FAIL',\r\n          payload: getError(err),\r\n        });\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [userInfo]);\r\n\r\n  return (\r\n    //UI of the component\r\n    <div>\r\n      <Helmet>\r\n        <title>Orders</title>\r\n      </Helmet>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <LoadingBox></LoadingBox>\r\n      ) : error ? (\r\n        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n      ) : (\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th>ACTIONS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map(\r\n              (\r\n                order //to convert each order into a row\r\n              ) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.user ? order.user.name : 'DELETED USER'}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice.toFixed(2)}</td>\r\n                  <td>{order.isPaid ? order.paidAt.substring(0, 10) : 'No'}</td>\r\n\r\n                  <td>\r\n                    {order.isDelivered\r\n                      ? order.deliveredAt.substring(0, 10)\r\n                      : 'No'}\r\n                  </td>\r\n                  <td>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => {\r\n                        navigate(`/order/${order._id}`);\r\n                      }}\r\n                    >\r\n                      Details\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              )\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}