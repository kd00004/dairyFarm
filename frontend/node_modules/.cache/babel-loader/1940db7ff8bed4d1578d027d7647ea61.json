{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kslud\\\\Documents\\\\dairyFarm\\\\frontend\\\\src\\\\screens\\\\ProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useReducer } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state,\n        loading: true\n      };\n    //loading is a state , ...state return previous state values\n    //loading is true so that we can show a loading box in UI and we have kept prvious state values\n\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        product: action.payload,\n        loading: false\n      };\n    //previous values are kept in the state and only update products = data coming from the action\n    //data is present in action.payload ,ie, all data from backend is in action.payload\n\n    case 'FETCH_FAIL':\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nfunction ProductScreen() {\n  _s();\n\n  //useParams returns an object of key/value pairs of URL parameters\n  const params = useParams();\n  const {\n    slug\n  } = params;\n  const [{\n    loading,\n    error,\n    product\n  }, dispatch] = useReducer(reducer, {\n    product: [],\n    //er are using product not products because we want to show only 1 product\n    loading: true,\n    error: ''\n  }); //first parameter is an object and second parameter is disptch it is used to call an action and\n  //update the state\n  //const [products, setProducts] = useState([]);\n  //useState allows to track state, state refers to data or properties that need tracking\n  //here products is a variable ,ie, current state and setProducts is a function that can update this state\n  //we have used destructuring . The initial state is empty array as indicated inside useState([]) function\n  //We can now include our state anywhere in our component.\n  //useState returns an array that contains a variable and function to update that variable\n\n  useEffect(() => {\n    const fetchData = async () => {\n      //before AJAX request we need to set loading to true\n      dispatch({\n        type: 'FETCH_REQUEST'\n      });\n\n      try {\n        const result = await axios.get(`/api/products/slug/${slug}`);\n        dispatch({\n          type: 'FETCH_SUCCESS',\n          payload: result.data\n        });\n      } catch (err) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: err.message\n        });\n      } //setProducts(result.data); //result.data is product in the backend\n      //async function returs a promise which can be pending, fulfilled, rejected\n      //await makes a function wait for a promise\n      //axios.get sends a AJAX request to the following address and puts the result in result variable\n      //AJAX request allows to read data from web server\n\n    };\n\n    fetchData();\n  }, [slug]); //slug is a dependency, when there is a change in slug (when user switches between pages)\n  //fetchData will dispatch again and we get new product from backend\n\n  return (//this is the UI part\n    //we are using conditional rendering\n    loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"img-large\",\n            src: product.image,\n            alt: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Rating, {\n                rating: product.rating,\n                numReviews: product.numReviews\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [\"Pirce : $\", product.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  );\n}\n\n_s(ProductScreen, \"/yHgiW73d0Q2ysL7xx+2I2yWO4I=\", false, function () {\n  return [useParams];\n});\n\n_c = ProductScreen;\nexport default ProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"names":["axios","useEffect","useReducer","useParams","Row","Col","reducer","state","action","type","loading","product","payload","error","ProductScreen","params","slug","dispatch","fetchData","result","get","data","err","message","image","name","rating","numReviews","price"],"sources":["C:/Users/kslud/Documents/dairyFarm/frontend/src/screens/ProductScreen.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useReducer } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_REQUEST':\r\n      return { ...state, loading: true };\r\n    //loading is a state , ...state return previous state values\r\n    //loading is true so that we can show a loading box in UI and we have kept prvious state values\r\n    case 'FETCH_SUCCESS':\r\n      return { ...state, product: action.payload, loading: false };\r\n    //previous values are kept in the state and only update products = data coming from the action\r\n    //data is present in action.payload ,ie, all data from backend is in action.payload\r\n    case 'FETCH_FAIL':\r\n      return { ...state, loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nfunction ProductScreen() {\r\n  //useParams returns an object of key/value pairs of URL parameters\r\n  const params = useParams();\r\n  const { slug } = params;\r\n\r\n  const [{ loading, error, product }, dispatch] = useReducer(reducer, {\r\n    product: [], //er are using product not products because we want to show only 1 product\r\n    loading: true,\r\n    error: '',\r\n  });\r\n  //first parameter is an object and second parameter is disptch it is used to call an action and\r\n  //update the state\r\n  //const [products, setProducts] = useState([]);\r\n  //useState allows to track state, state refers to data or properties that need tracking\r\n  //here products is a variable ,ie, current state and setProducts is a function that can update this state\r\n  //we have used destructuring . The initial state is empty array as indicated inside useState([]) function\r\n  //We can now include our state anywhere in our component.\r\n  //useState returns an array that contains a variable and function to update that variable\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      //before AJAX request we need to set loading to true\r\n      dispatch({ type: 'FETCH_REQUEST' });\r\n      try {\r\n        const result = await axios.get(`/api/products/slug/${slug}`);\r\n        dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\r\n      } catch (err) {\r\n        dispatch({ type: 'FETCH_FAIL', payload: err.message });\r\n      }\r\n\r\n      //setProducts(result.data); //result.data is product in the backend\r\n      //async function returs a promise which can be pending, fulfilled, rejected\r\n      //await makes a function wait for a promise\r\n      //axios.get sends a AJAX request to the following address and puts the result in result variable\r\n      //AJAX request allows to read data from web server\r\n    };\r\n    fetchData();\r\n  }, [slug]); //slug is a dependency, when there is a change in slug (when user switches between pages)\r\n  //fetchData will dispatch again and we get new product from backend\r\n\r\n  return (\r\n    //this is the UI part\r\n    //we are using conditional rendering\r\n    loading ? (\r\n      <div>Loading...</div>\r\n    ) : error ? (\r\n      <div>{error}</div>\r\n    ) : (\r\n      <div>\r\n        <Row>\r\n          <Col md={6}>\r\n            <img\r\n              className=\"img-large\"\r\n              src={product.image}\r\n              alt={product.name}\r\n            ></img>\r\n          </Col>\r\n          <Col md={3}>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h1>{product.name}</h1>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Rating\r\n                  rating={product.rating}\r\n                  numReviews={product.numReviews}\r\n                ></Rating>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>Pirce : ${product.price}</ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={3}></Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  );\r\n}\r\nexport default ProductScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}