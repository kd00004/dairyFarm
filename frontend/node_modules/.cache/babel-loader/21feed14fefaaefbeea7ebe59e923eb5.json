{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kslud\\\\Documents\\\\dairyFarm\\\\frontend\\\\src\\\\screens\\\\SigninScreen.js\",\n    _s = $RefreshSig$();\n\nimport Axios from 'axios';\nimport { Link, useLocation } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Helmet } from 'react-helmet-async';\nimport { useContext, useState } from 'react';\nimport { Store } from '../Store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SigninScreen() {\n  _s();\n\n  const {\n    search\n  } = useLocation(); //its a hook\n\n  const redirectInUrl = new URLSearchParams(search).get('redirect');\n  const redirect = redirectInUrl ? redirectInUrl : '/';\n  const [email, setEmail] = useState(''); //default value is empty string\n\n  const [password, setPassword] = useState('');\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n\n  const submitHandler = async e => {\n    e.preventDefault(); //to prevent refreshing the page when user clickson signin button\n\n    try {\n      //we are going to send an AJAX request to backend\n      const {\n        data\n      } = await Axios.post('/api/users/signin', {\n        //this is body of request\n        email,\n        //email and password are sent to the api as a post request\n        password //we get a response and extract data from that response\n        //email and password are states we use useState to define them\n\n      });\n      ctxDispatch({\n        type: 'USER_SIGNIN',\n        payload: data\n      });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      navigate(redirect || '/');\n    } catch (err) {}\n  };\n\n  return (\n    /*#__PURE__*/\n    // we create a container to make the sign in form\n    _jsxDEV(Container, {\n      className: \"small-container\",\n      children: [/*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"my-3\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), ' ', /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [' ', /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            required: true,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            required: true,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [\"New customer? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/signup?redirect=${redirect}`,\n            children: \"Create your account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(SigninScreen, \"0tjvuxpiar5X1WS5/jQPpwdFap0=\", false, function () {\n  return [useLocation];\n});\n\n_c = SigninScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SigninScreen\");","map":{"version":3,"names":["Axios","Link","useLocation","Container","Form","Button","Helmet","useContext","useState","Store","SigninScreen","search","redirectInUrl","URLSearchParams","get","redirect","email","setEmail","password","setPassword","state","dispatch","ctxDispatch","submitHandler","e","preventDefault","data","post","type","payload","localStorage","setItem","JSON","stringify","navigate","err","target","value"],"sources":["C:/Users/kslud/Documents/dairyFarm/frontend/src/screens/SigninScreen.js"],"sourcesContent":["import Axios from 'axios';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { useContext, useState } from 'react';\r\nimport { Store } from '../Store';\r\n\r\nexport default function SigninScreen() {\r\n  const { search } = useLocation(); //its a hook\r\n  const redirectInUrl = new URLSearchParams(search).get('redirect');\r\n  const redirect = redirectInUrl ? redirectInUrl : '/';\r\n\r\n  const [email, setEmail] = useState(''); //default value is empty string\r\n  const [password, setPassword] = useState('');\r\n\r\n  const { state, dispatch: ctxDispatch } = useContext(Store);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault(); //to prevent refreshing the page when user clickson signin button\r\n    try {\r\n      //we are going to send an AJAX request to backend\r\n      const { data } = await Axios.post('/api/users/signin', {\r\n        //this is body of request\r\n        email, //email and password are sent to the api as a post request\r\n        password, //we get a response and extract data from that response\r\n        //email and password are states we use useState to define them\r\n      });\r\n      ctxDispatch({ type: 'USER_SIGNIN', payload: data });\r\n      localStorage.setItem('userInfo', JSON.stringify(data));\r\n      navigate(redirect || '/');\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    // we create a container to make the sign in form\r\n    <Container className=\"small-container\">\r\n      <Helmet>\r\n        <title>Sign In</title>\r\n      </Helmet>\r\n      <h1 className=\"my-3\">Sign In</h1>{' '}\r\n      {/* my-3 means margin from top and bottom is 3 rem*/}\r\n      <Form onSubmit={submitHandler}>\r\n        {' '}\r\n        {/*define submitHandler as an async function */}\r\n        <Form.Group className=\"mb-3\" controlId=\"email\">\r\n          {/*we use form group to put label and input box next to each other */}\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            required\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />{' '}\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            required\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <div className=\"mb-3\">\r\n          <Button type=\"submit\">Sign In</Button>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          New customer? {/*if  customer is new */}\r\n          {/*and if new we will redirect user to the sign up page and seet query string for\r\n          redirect to the redirect variable that we are going to fetch from URL*/}\r\n          <Link to={`/signup?redirect=${redirect}`}>Create your account</Link>\r\n        </div>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}