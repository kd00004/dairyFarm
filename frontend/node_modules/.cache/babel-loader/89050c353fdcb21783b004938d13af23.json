{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kslud\\\\Documents\\\\dairyFarm\\\\frontend\\\\src\\\\screens\\\\HomeScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport data from '../data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomeScreen() {\n  _s();\n\n  const [products, setProducts] = useState([]); //useState allows to track state, state refers to data or properties that need tracking\n  //here products is a variable ,ie, current state and setProducts is a function that can update this state\n  //we have used destructuring . The initial state is empty array as indicated inside useState([]) function\n  //We can now include our state anywhere in our component.\n  //useState returns an array that contains a variable and function to update that variable\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Featured Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products\",\n      children: //INSIDE PRODUCTS DIV WE HAVE PRODUCT\n      //SINCE WE ARE INSIDE DIV WE HAVE USED CURLY BRACES\n      //convert each product to a JSX . map calls for each element\n      //and creates a new array by applying func on it once\n      //we are writing jsx which allows to write html in js\n      //map function maps custom pieces of data to each of the custom components\n      //template literals allow variables and expression in strings\n      data.products.map((product //here product acts like an iterator\n      ) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/product/${product.slug}`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: product.image,\n            alt: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-info\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/product/${product.slug}`,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Rs.\", product.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Add To Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)]\n      }, product.slug, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomeScreen, \"/ZAmBmUKriWz3XDcp0xu079Wyow=\");\n\n_c = HomeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"names":["React","useState","Link","data","HomeScreen","products","setProducts","map","product","slug","image","name","price"],"sources":["C:/Users/kslud/Documents/dairyFarm/frontend/src/screens/HomeScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport data from '../data';\r\n\r\nexport default function HomeScreen() {\r\n  const [products, setProducts] = useState([]);\r\n  //useState allows to track state, state refers to data or properties that need tracking\r\n  //here products is a variable ,ie, current state and setProducts is a function that can update this state\r\n  //we have used destructuring . The initial state is empty array as indicated inside useState([]) function\r\n  //We can now include our state anywhere in our component.\r\n  //useState returns an array that contains a variable and function to update that variable\r\n  return (\r\n    <div>\r\n      <h1>Featured Products</h1>\r\n      <div className=\"products\">\r\n        {\r\n          //INSIDE PRODUCTS DIV WE HAVE PRODUCT\r\n          //SINCE WE ARE INSIDE DIV WE HAVE USED CURLY BRACES\r\n          //convert each product to a JSX . map calls for each element\r\n          //and creates a new array by applying func on it once\r\n          //we are writing jsx which allows to write html in js\r\n          //map function maps custom pieces of data to each of the custom components\r\n          //template literals allow variables and expression in strings\r\n          data.products.map(\r\n            (\r\n              product //here product acts like an iterator\r\n            ) => (\r\n              <div className=\"product\" key={product.slug}>\r\n                <Link to={`/product/${product.slug}`}>\r\n                  <img src={product.image} alt={product.name} />\r\n                </Link>\r\n                <div className=\"product-info\">\r\n                  <Link to={`/product/${product.slug}`}>\r\n                    <p>{product.name}</p>\r\n                  </Link>\r\n                  <p>\r\n                    <strong>Rs.{product.price}</strong>\r\n                  </p>\r\n                  <button>Add To Cart</button>\r\n                </div>\r\n              </div>\r\n            )\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,eAAe,SAASC,UAAT,GAAsB;EAAA;;EACnC,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC,CADmC,CAEnC;EACA;EACA;EACA;EACA;;EACA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,UAAf;MAAA,UAEI;MACA;MACA;MACA;MACA;MACA;MACA;MACAE,IAAI,CAACE,QAAL,CAAcE,GAAd,CACE,CACEC,OADF,CACU;MADV,kBAGE;QAAK,SAAS,EAAC,SAAf;QAAA,wBACE,QAAC,IAAD;UAAM,EAAE,EAAG,YAAWA,OAAO,CAACC,IAAK,EAAnC;UAAA,uBACE;YAAK,GAAG,EAAED,OAAO,CAACE,KAAlB;YAAyB,GAAG,EAAEF,OAAO,CAACG;UAAtC;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF,eAIE;UAAK,SAAS,EAAC,cAAf;UAAA,wBACE,QAAC,IAAD;YAAM,EAAE,EAAG,YAAWH,OAAO,CAACC,IAAK,EAAnC;YAAA,uBACE;cAAA,UAAID,OAAO,CAACG;YAAZ;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADF,eAIE;YAAA,uBACE;cAAA,kBAAYH,OAAO,CAACI,KAApB;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QAJF,eAOE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAPF;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA,GAA8BJ,OAAO,CAACC,IAAtC;QAAA;QAAA;QAAA;MAAA,QAJJ;IATJ;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoCD;;GA3CuBL,U;;KAAAA,U"},"metadata":{},"sourceType":"module"}