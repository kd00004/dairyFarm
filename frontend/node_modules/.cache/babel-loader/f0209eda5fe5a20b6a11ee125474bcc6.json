{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kslud\\\\Documents\\\\dairyFarm\\\\frontend\\\\src\\\\Store.js\",\n    _s = $RefreshSig$();\n\n//react context needs a store\nimport { createContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Store = /*#__PURE__*/createContext(); //context is designed to share data tht can be considered GLOBAL for a tree of Reaact components\n//It is used when some data needs to be accessible by many componentsat different nesting levels\n\nconst initialState = {\n  //initialState is an object\n  cart: {\n    //cart iteself is an object\n    cartItems: []\n  }\n};\n\nfunction reducer(state, action) {\n  //the first action we are implementing is add to cart\n  switch (action.type) {\n    case 'CART_ADD_ITEM':\n      //add to cart\n      //keep all things as they are and add new item to the cart\n      return { ...state,\n        cart: { ...state.cart,\n          //keep all previous values in cart objects in the state and only update cart items\n          cartItems: [...state.cart.cartItems, action.payload] //keep previous items in state. New item is in action.payload\n\n        }\n      };\n\n    default:\n      return state;\n  }\n} //StoreProvider is a wrapper for our react application and paas global props to children\n\n\nexport function StoreProvider(props) {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = {\n    state,\n    dispatch\n  }; //value is defined as mix of state and dispatch\n\n  return /*#__PURE__*/_jsxDEV(Store.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this); //{value} is the value we defined earlier\n  //value contains the current state in the context and the dispatch to update the state in the context\n  //render {props.children}\n}\n\n_s(StoreProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = StoreProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreProvider\");","map":{"version":3,"names":["createContext","useReducer","Store","initialState","cart","cartItems","reducer","state","action","type","payload","StoreProvider","props","dispatch","value","children"],"sources":["C:/Users/kslud/Documents/dairyFarm/frontend/src/Store.js"],"sourcesContent":["//react context needs a store\r\nimport { createContext, useReducer } from 'react';\r\n\r\nexport const Store = createContext();\r\n//context is designed to share data tht can be considered GLOBAL for a tree of Reaact components\r\n//It is used when some data needs to be accessible by many componentsat different nesting levels\r\n\r\nconst initialState = {\r\n  //initialState is an object\r\n  cart: {\r\n    //cart iteself is an object\r\n    cartItems: [],\r\n  },\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  //the first action we are implementing is add to cart\r\n  switch (action.type) {\r\n    case 'CART_ADD_ITEM':\r\n      //add to cart\r\n      //keep all things as they are and add new item to the cart\r\n      return {\r\n        ...state,\r\n        cart: {\r\n          ...state.cart, //keep all previous values in cart objects in the state and only update cart items\r\n          cartItems: [...state.cart.cartItems, action.payload],\r\n          //keep previous items in state. New item is in action.payload\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//StoreProvider is a wrapper for our react application and paas global props to children\r\nexport function StoreProvider(props) {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const value = { state, dispatch }; //value is defined as mix of state and dispatch\r\n  return <Store.Provider value={value}>{props.children}</Store.Provider>;\r\n  //{value} is the value we defined earlier\r\n  //value contains the current state in the context and the dispatch to update the state in the context\r\n  //render {props.children}\r\n}\r\n"],"mappings":";;;AAAA;AACA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;;AAEA,OAAO,MAAMC,KAAK,gBAAGF,aAAa,EAA3B,C,CACP;AACA;;AAEA,MAAMG,YAAY,GAAG;EACnB;EACAC,IAAI,EAAE;IACJ;IACAC,SAAS,EAAE;EAFP;AAFa,CAArB;;AAQA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;EAC9B;EACA,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,eAAL;MACE;MACA;MACA,OAAO,EACL,GAAGF,KADE;QAELH,IAAI,EAAE,EACJ,GAAGG,KAAK,CAACH,IADL;UACW;UACfC,SAAS,EAAE,CAAC,GAAGE,KAAK,CAACH,IAAN,CAAWC,SAAf,EAA0BG,MAAM,CAACE,OAAjC,CAFP,CAGJ;;QAHI;MAFD,CAAP;;IASF;MACE,OAAOH,KAAP;EAdJ;AAgBD,C,CAED;;;AACA,OAAO,SAASI,aAAT,CAAuBC,KAAvB,EAA8B;EAAA;;EACnC,MAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBZ,UAAU,CAACK,OAAD,EAAUH,YAAV,CAApC;EACA,MAAMW,KAAK,GAAG;IAAEP,KAAF;IAASM;EAAT,CAAd,CAFmC,CAEA;;EACnC,oBAAO,QAAC,KAAD,CAAO,QAAP;IAAgB,KAAK,EAAEC,KAAvB;IAAA,UAA+BF,KAAK,CAACG;EAArC;IAAA;IAAA;IAAA;EAAA,QAAP,CAHmC,CAInC;EACA;EACA;AACD;;GAPeJ,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}